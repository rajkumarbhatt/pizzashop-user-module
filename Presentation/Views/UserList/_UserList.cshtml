@model DAL.ViewModels.UserListViewModel
<table id="userTable" class="table table-responsive"  style="white-space: nowrap;">
                    <thead class="color-head">
                        <tr class="text-start">
                            <th>Name <img src="~/images/icons/sorting-icon.svg" id="sortNames" class="small-image"></th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Role <img src="~/images/icons/sorting-icon.svg" id="sortRoles" class="small-image"></th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody class="">
                        @foreach(var user in Model.Users)
                        {
                            <tr class="text-start">
                                @{
                                    string profileImagePath = string.IsNullOrEmpty(@user.ProfileImage) 
                                        ? "/images/default-profile.png" 
                                        : $"/images/profile-images/{@user.ProfileImage}";
                                }
                                <td><img src=@profileImagePath class="table-name-image profile-image-border object-fit-cover"> @user.FirstName @user.LastName</td>
                                <td>@user.Email</td>
                                <td>@user.Phone</td>
                                <td>@if(user.RoleId == 1)
                                    {
                                        <span class="">Super Admin</span>
                                    }
                                    else if(user.RoleId == 2)
                                    {
                                        <span class="">Account Manager</span>
                                    }
                                    else
                                    {
                                        <span class="">Chef</span>
                                    }</td>
                                <td>@if(user.Status == true)
                                    {
                                        <span class="active-user">Active</span>
                                    }
                                    else
                                    {
                                        <span class="inactive-user">Inactive</span>
                                    }

                                </td>
                                <td>
                                    <a onclick="editUser(@user.Id)" > <img src="./images/icons/edit.svg" class="small-image" 
                                            alt=""></a>
                                    <button type="button" class="delete-btn" data-bs-toggle="modal"  data-bs-target="#deleteModel" onclick="openModel(@user.Id)">
                                        <a href="#"> <img src="./images/icons/delete.svg" class="small-image" alt=""></a></button>
                                    
                                </td>
                            </tr>
                        }                   
                    </tbody>
                </table>
            <div class="d-flex flex-column flex-sm-row align-items-center justify-content-end g-3 me-sm-5">
    <p>Items per page: </p>
    <select class="form-select pagination-dropdown text-black" aria-label="Items per page"
        onchange="changePageSize(this.value)">
        <option value="5" selected="@(Model.PageSize == 5 ? "selected" : null)">5</option>
        <option value="10" selected="@(Model.PageSize == 10 ? "selected" : null)">10</option>
        <option value="15" selected="@(Model.PageSize == 15 ? "selected" : null)">15</option>
    </select>
    <p class="px-1">
        Showing @((Model.PageIndex - 1) * Model.PageSize + 1) - 
        @(Math.Min(Model.PageIndex * Model.PageSize, Model.TotalUsers)) of 
        @Model.TotalUsers
    </p>


    <div>
            </div>
    <button id="previousButton" class="p-1 px-2" @(Model.PageIndex == 1 ? "disabled" : "")>&lt;</button>

    <button id="nextButton" class="p-1 px-2 ms-1 border-1 border-secondary" @(Model.PageIndex == Model.TotalPages ? "disabled" : "")>&gt;</button>
    </div>
</div>

<script>

    var sortColumn;
    var ascendingName;
    var ascendingRole;
    var sortColumnDirection;

    $("#nextButton").click(function () {
        const currentPageIndex = @Model.PageIndex;
        const nextPageIndex = currentPageIndex + 1;
        const searchValue = $("#searchInput").val().toLowerCase();
        const pageSize = @Model.PageSize;
        $.ajax({
            url: '@Url.Action("SearchUser", "UserList")',
            type: 'GET',
            data: { pageIndex: nextPageIndex, pageSize: pageSize, searchValue: searchValue, sortColumn: sortColumn, sortColumnDirection: sortColumnDirection },
            success: function (data) {
                $("#partialViewStarting").html(data);
            }
        });
    });

    $("#previousButton").click(function () {
        const currentPageIndex = @Model.PageIndex;
        const previousPageIndex = currentPageIndex - 1;
        const searchValue = $("#searchInput").val().toLowerCase();
        const pageSize = @Model.PageSize;
        $.ajax({
            url: '@Url.Action("SearchUser", "UserList")',
            type: 'GET',
            data: { pageIndex: previousPageIndex, pageSize: pageSize, searchValue: searchValue, sortColumn: sortColumn, sortColumnDirection: sortColumnDirection },
            success: function (data) {
                $("#partialViewStarting").html(data);
            }
        });
    });

    function changePageSize(pageSize) {
        const currentPageIndex = 1; 
        const searchValue = $("#searchInput").val().toLowerCase();
        $.ajax({
            url: '@Url.Action("SearchUser", "UserList")',
            type: 'GET',
            data: { pageIndex: currentPageIndex, pageSize: pageSize,  searchValue: searchValue, sortColumn: sortColumn, sortColumnDirection: sortColumnDirection },
            success: function (data) {
                $("#partialViewStarting").html(data);
            }
        });
    }

    $("#sortNames").click(function () {
        if (ascendingName) {
            sortColumnDirection = "asc";
            ascendingName = false;
        } else {
            sortColumnDirection = "desc";
            ascendingName = true;
        }
        sortColumn = "FirstName";
        const currentPageIndex = 1;
        const pageSize = @Model.PageSize;
        const searchValue = $("#searchInput").val().toLowerCase();
        $.ajax({
            url: '@Url.Action("SearchUser", "UserList")',
            type: 'GET',
            @* if ascending than call descennding *@
            data: { pageIndex: currentPageIndex, pageSize: pageSize, searchValue: searchValue, sortColumn: sortColumn, sortColumnDirection: sortColumnDirection },
            success: function (data) {
                $("#partialViewStarting").html(data);
            }
        });
    });

    $("#sortRoles").click(function () {
        console.log(ascendingRole);
        if (ascendingRole) {
            sortColumnDirection = "asc";
            ascendingRole = false;
        } else {
            sortColumnDirection = "desc";
            ascendingRole = true;
        }
        const currentPageIndex = 1;
        const pageSize = @Model.PageSize;
        sortColumn = "RoleId";
        const searchValue = $("#searchInput").val().toLowerCase();
        $.ajax({
            url: '@Url.Action("SearchUser", "UserList")',
            type: 'GET',
            data: { pageIndex: currentPageIndex, pageSize: pageSize, searchValue: searchValue, sortColumn: sortColumn, sortColumnDirection: sortColumnDirection },
            success: function (data) {
                $("#partialViewStarting").html(data);
            }
        });
    });

    $("#searchInput").on("keyup", function () {
        clearTimeout($.data(this, 'timer'));
        var searchValue = $(this).val().toLowerCase();
        if (searchValue == "") {
            searchValue = null;
        }
        $(this).data('timer', setTimeout(function () {
            const currentPageIndex = 1;
            const pageSize = @Model.PageSize;
            $.ajax({
                url: '@Url.Action("SearchUser", "UserList")',
                type: 'GET',
                data: { pageIndex: currentPageIndex, pageSize: pageSize, searchValue: searchValue, sortColumn: sortColumn, sortColumnDirection: sortColumnDirection },
                success: function (data) {
                    $("#partialViewStarting").html(data);
                }
            });
        }, 300));
    });
    
</script>

        </div>